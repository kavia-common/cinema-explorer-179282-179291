{"is_source_file": true, "format": "JavaScript", "description": "This file provides a client for interacting with the TMDB (The Movie Database) API, including functions to fetch movie data, perform searches, handle authentication, and build image URLs.", "external_files": ["node-fetch (implied as fetch is used, but actual import not shown)"], "external_methods": ["fetch"], "published": ["IMAGE_BASE", "buildImageUrl", "searchMovies", "getTrending", "getFeatured"], "classes": [], "methods": [{"name": "isV4Token(key)", "description": "Determines if a token is a TMDB v4 JWT based on its prefix 'eyJ'.", "scope": "", "scopeKind": ""}, {"name": "getAuthForKey(key)", "description": "Builds authorization headers or query parameters based on whether the key is a v4 JWT or v3 API key.", "scope": "", "scopeKind": ""}, {"name": "appendParams(search, params)", "description": "Appends non-null, non-empty parameters to a URLSearchParams instance.", "scope": "", "scopeKind": ""}, {"name": "apiGet(path, params = {})", "description": "Performs a GET request to the TMDB API with proper authentication, error handling, and rate-limit awareness.", "scope": "", "scopeKind": ""}, {"name": "buildImageUrl(path, size = 'w342')", "description": "Constructs a full image URL for TMDB images or provides a fallback placeholder image.", "scope": "", "scopeKind": ""}, {"name": "shapePaged(payload)", "description": "Shapes TMDB paginated API responses into a consistent object format.", "scope": "", "scopeKind": ""}, {"name": "searchMovies(query, page = 1)", "description": "Searches for movies by query string, returning paginated results.", "scope": "", "scopeKind": ""}, {"name": "getTrending(period = 'day', page = 1)", "description": "Retrieves trending movies for a specified period ('day' or 'week').", "scope": "", "scopeKind": ""}, {"name": "getFeatured(page = 1)", "description": "Fetches popular movies to serve as featured content.", "scope": "", "scopeKind": ""}], "calls": ["getAuthForKey(TMDB_API_KEY)", "appendParams(url.searchParams, { language: 'en-US', ...query, ...params })", "fetch(url.toString(), { method: 'GET', headers })", "JSON.parse(text)", "searchMovies", "getTrending", "getFeatured"], "search-terms": ["TMDB_API_BASE", "TMDB_API_KEY", "isV4Token", "apiGet", "buildImageUrl", "searchMovies", "getTrending", "getFeatured"], "state": 2, "file_id": 19, "knowledge_revision": 48, "git_revision": "", "ctags": [{"_type": "tag", "name": "Accept", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^  const headers = { Accept: 'application\\/json' };$/", "language": "JavaScript", "kind": "property", "scope": "getAuthForKey.headers", "scopeKind": "class"}, {"_type": "tag", "name": "IMAGE_BASE", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^export const IMAGE_BASE = 'https:\\/\\/image.tmdb.org\\/t\\/p\\/w342';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "TMDB_API_BASE", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^const TMDB_API_BASE = 'https:\\/\\/api.themoviedb.org\\/3';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "TMDB_API_KEY", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^const TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "apiGet", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^async function apiGet(path, params = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, params = {})"}, {"_type": "tag", "name": "appendParams", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^function appendParams(search, params) {$/", "language": "JavaScript", "kind": "function", "signature": "(search, params)"}, {"_type": "tag", "name": "buildImageUrl", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^export function buildImageUrl(path, size = 'w342') {$/", "language": "JavaScript", "kind": "function", "signature": "(path, size = 'w342')"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^    data = { message: text || 'Unknown error' };$/", "language": "JavaScript", "kind": "class", "scope": "apiGet", "scopeKind": "class"}, {"_type": "tag", "name": "getAuthForKey", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^function getAuthForKey(key) {$/", "language": "JavaScript", "kind": "function", "signature": "(key)"}, {"_type": "tag", "name": "getFeatured", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^export async function getFeatured(page = 1) {$/", "language": "JavaScript", "kind": "function", "signature": "(page = 1)"}, {"_type": "tag", "name": "getTrending", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^export async function getTrending(period = 'day', page = 1) {$/", "language": "JavaScript", "kind": "function", "signature": "(period = 'day', page = 1)"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^  const headers = { Accept: 'application\\/json' };$/", "language": "JavaScript", "kind": "class", "scope": "getAuthForKey", "scopeKind": "class"}, {"_type": "tag", "name": "isV4Token", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^function isV4Token(key) {$/", "language": "JavaScript", "kind": "function", "signature": "(key)"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^    data = { message: text || 'Unknown error' };$/", "language": "JavaScript", "kind": "property", "scope": "apiGet.data", "scopeKind": "class"}, {"_type": "tag", "name": "searchMovies", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^export async function searchMovies(query, page = 1) {$/", "language": "JavaScript", "kind": "function", "signature": "(query, page = 1)"}, {"_type": "tag", "name": "shapePaged", "path": "/home/kavia/workspace/code-generation/cinema-explorer-179282-179291/react_frontend/src/lib/tmdbClient.js", "pattern": "/^function shapePaged(payload) {$/", "language": "JavaScript", "kind": "function", "signature": "(payload)"}], "hash": "92faecd9337d893e24dcb9462a25de54", "format-version": 4, "code-base-name": "react_frontend", "filename": "react_frontend/src/lib/tmdbClient.js", "fields": [{"name": "const headers = { Accept: 'application\\/json' };", "scope": "getAuthForKey.headers", "scopeKind": "class", "description": "unavailable"}, {"name": "data = { message: text || 'Unknown error' };", "scope": "apiGet.data", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"48": ""}]}